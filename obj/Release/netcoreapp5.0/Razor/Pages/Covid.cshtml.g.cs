#pragma checksum "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6c4080843e4cd08294fd443dbded473484c932da"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(CovidNepalVisualization.Pages.Pages_Covid), @"mvc.1.0.razor-page", @"/Pages/Covid.cshtml")]
namespace CovidNepalVisualization.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\_ViewImports.cshtml"
using CovidNepalVisualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6c4080843e4cd08294fd443dbded473484c932da", @"/Pages/Covid.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dfbd0780340c10fd61bd9aa5503e308751e01668", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Covid : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 5 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
  
    ViewData["Title"] = "Covid 19 Data Visualization";

    var result = await dataService.GetDataByNepalAsync();


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\nTotal Confirmed : ");
#nullable restore
#line 12 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
             Write(result.TotalConfirmed);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<br />\r\nTotal Deaths : ");
#nullable restore
#line 14 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
          Write(result.TotalDeaths);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<br />\r\nTotal Recovered : ");
#nullable restore
#line 16 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
             Write(result.TotalRecovered);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<br />\r\nTotal Active : ");
#nullable restore
#line 18 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
          Write(result.TotalActive);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<br />

<figure class=""highcharts-figure"">
    <div id=""container""></div>
    <p class=""highcharts-description"">
        Basic line chart showing trends in a dataset. This chart includes the
        <code>series-label</code> module, which adds a label to each line for
        enhanced readability.
    </p>
</figure>


");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script src=""https://code.highcharts.com/highcharts.js""></script>

    <script type=""text/javascript"">
    window.onload = function () {
        // Create the chart

        Highcharts.chart('container', {

            title: {
                text: 'Covid 19 data visualization in nepal'
            },

            subtitle: {
                text: 'Source: covid19api.com'
            },

            yAxis: {
                title: {
                    text: 'Number of Employees'
                }
            },

            xAxis: {
                accessibility: {
                    rangeDescription: 'Range: 2010 to 2017'
                }
            },

            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle'
            },

            plotOptions: {
                series: {
                    label: {
                        connectorAllowed: false
                    },
            ");
                WriteLiteral("        pointStart: 2010\r\n                }\r\n            },\r\n\r\n            series: [{\r\n                name: \'Confirmed\',\r\n                data: ");
#nullable restore
#line 77 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
                 Write(Html.Raw(result.Confirmed));

#line default
#line hidden
#nullable disable
                WriteLiteral(",\r\n            }\r\n\r\n                , {\r\n                    name: \'Deaths\',\r\n                data: ");
#nullable restore
#line 82 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
                 Write(Html.Raw(result.Deaths));

#line default
#line hidden
#nullable disable
                WriteLiteral(",\r\n            }, {\r\n                    name: \'Recovered\',\r\n                data: ");
#nullable restore
#line 85 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
                 Write(Html.Raw(result.Recovered));

#line default
#line hidden
#nullable disable
                WriteLiteral(",\r\n            }, {\r\n                    name: \'Active\',\r\n                data:");
#nullable restore
#line 88 "D:\Code\CovidNepalDataVisualization\CovidNepalVisualization\Pages\Covid.cshtml"
                Write(Html.Raw(result.Active));

#line default
#line hidden
#nullable disable
                WriteLiteral(@",
                }

            ],

            responsive: {
                rules: [{
                    condition: {
                        maxWidth: 500
                    },
                    chartOptions: {
                        legend: {
                            layout: 'horizontal',
                            align: 'center',
                            verticalAlign: 'bottom'
                        }
                    }
                }]
            }

        });




    }
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public CovidDataService dataService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_Covid> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Covid> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Covid>)PageContext?.ViewData;
        public Pages_Covid Model => ViewData.Model;
    }
}
#pragma warning restore 1591
